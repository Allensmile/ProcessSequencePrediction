{
  "name": "Predictive Business Process Monitoring with LSTM Neural Networks",
  "tagline": "Supplementary materials for the CAiSE '17 paper",
  "body": "Following are the supplementary material for the article [\"Predictive Business Process Monitoring with\r\nLSTM Neural Networks\"](http://example.com) by Niek Tax, Ilya Verenich, Marlon Dumas and Marcello La Rosa.\r\n\r\nThe code provided in this repository can be readily used to perform the following predictive tasks:\r\n* Prediction of the next type of activity to be executed in a running process instance\r\n* Prediction of the timestamp of the next type of activity to be executed\r\n* Prediction of the continuation of a running instance, i.e. its suffix\r\n* Prediction of the remaining cycle time of an instance\r\n\r\nThe predictions \r\n\r\n**Requirements:**   \r\nPython 2; \r\n\r\n**USAGE:**  \r\n**Model training:**\r\n`python train.py`   \r\nThis script trains an LSTM model on one of the data files in the data folder of this repository. The input file can be changed to another file from the data folder in by changing the path in both line 47 and 124. It is recommended to run this script on GPU, as recurrent networks are quite computationally intensive.\r\n\r\n**Evaluation:**\r\n`python evaluation.py` \r\nThis script takes as input the LSTM or RNN weights found by `train.py`. Change the path in line 172 of this script to point to the h5 file with LSTM or RNN weights generated by train.py\r\n\r\nIf you want to evaluate the performance of the next event prediction (not the whole suffix), please run `python calculate_accuracy_on_next_event.py`. This script takes as input the output of `evaluate.py` therefore, `evaluate.py` needs to be executed first\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}